import json
from decimal import Decimal

import pytest
import requests
from defabipedia.lido import ContractSpecs
from defabipedia.types import Chain
from roles_royce.protocols.eth import lido as rr_lido
from roles_royce.roles_modifier import GasStrategies, set_gas_strategy
from roles_royce.toolshed.disassembling import LidoDisassembler

from defi_repertoire.strategies.base import GenericTxContext
from defi_repertoire.strategies.disassembling import disassembling_lido as lido
from defi_repertoire.strategies.disassembling.disassembler import Disassembler
from tests.fork_fixtures import accounts
from tests.fork_fixtures import local_node_eth_replay as local_node_eth
from tests.roles import apply_presets, deploy_roles, setup_common_roles
from tests.utils import create_simple_safe, steal_token

presets = """{
  "version": "1.0",
  "chainId": "1",
  "meta": {
    "name": null,
    "description": "",
    "txBuilderVersion": "1.8.0"
  },
  "createdAt": 1701637793776,
  "transactions": [
    {
      "to": "0x1ffAdc16726dd4F91fF275b4bF50651801B06a86",
      "data": "0x5e8266950000000000000000000000000000000000000000000000000000000000000004000000000000000000000000ae7ab96520de3a18e5e111b5eaab095312d7fe84",
      "value": "0"
    },
    {
      "to": "0x1ffAdc16726dd4F91fF275b4bF50651801B06a86",
      "data": "0x33a0480c0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000ae7ab96520de3a18e5e111b5eaab095312d7fe84095ea7b
      "value": "0"
    },
    {
      "to": "0x1ffAdc16726dd4F91fF275b4bF50651801B06a86",
      "data": "0x939337720000000000000000000000000000000000000000000000000000000000000004000000000000000000000000ae7ab96520de3a18e5e111b5eaab095312d7fe84095ea7b3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000200000000000000000000000007f39c581f595b53c5cb19bd0b3f8da6c935e2ca00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000889edc2edab5f40e902b864ad4d7ade8e412f9b1",
      "value": "0"
    },
    {
      "to": "0x1ffAdc16726dd4F91fF275b4bF50651801B06a86",
      "data": "0x5e82669500000000000000000000000000000000000000000000000000000000000000040000000000000000000000007f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",
      "value": "0"
    },
    {
      "to": "0x1ffAdc16726dd4F91fF275b4bF50651801B06a86",
      "data": "0x33a0480c00000000000000000000000000000000000000000000000000000000000000040000000000000000000000007f39c581f595b53c5cb19bd0b3f8da6c935e2ca0095ea7b30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000001cedc2edab5f40e902b864ad4d7ade8e412f9b1",
      "value": "0"
    },
    {
      "to": "0x1ffAdc16726dd4F91fF275b4bF50651801B06a86",
      "data": "0x5e8266950000000000000000000000000000000000000000000000000000000000000004000000000000000000000000889edc2edab5f40e902b864ad4d7ade8e412f9b1",
      "value": "0"
    },
    {
      "to": "0x1ffAdc16726dd4F91fF275b4bF50651801B06a86",
      "data": "0x33a0480c0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000889edc2edab5f40e902b864ad4d7ade8e412f9b1d6681042000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001cc01318bab7ee1f5ba734172bf7718b5dc6ec90e1",
      "value": "0"
    },
    {
      "to": "0x1ffAdc16726dd4F91fF275b4bF50651801B06a86",
      "data": "0x33a0480c0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000889edc2edab5f40e902b864ad4d7ade8e412f9b119aa6257000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001cc01318bab7ee1f5ba734172bf7718b5dc6ec90e1",
      "value": "0"
    },
    {
      "to": "0x1ffAdc16726dd4F91fF275b4bF50651801B06a86",
      "data": "0x2fcf52d10000000000000000000000000000000000000000000000000000000000000004000000000000000000000000889edc2edab5f40e902b864ad4d7ade8e412f9b1e3afe0a3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
      "value": "0"
    }
  ]
}"""


def test_integration_exit_1(local_node_eth, accounts):
    w3 = local_node_eth.w3
    block = 18421437
    local_node_eth.set_block(block)

    avatar_safe = create_simple_safe(w3=w3, owner=accounts[0])
    roles_contract = deploy_roles(avatar=avatar_safe.address, w3=w3)
    setup_common_roles(avatar_safe, roles_contract)
    apply_presets(
        avatar_safe,
        roles_contract,
        json_data=presets,
        replaces=[
            ("c01318bab7ee1f5ba734172bf7718b5dc6ec90e1", avatar_safe.address[2:])
        ],
    )

    blockchain = Chain.get_blockchain_from_web3(w3)
    steal_token(
        w3=w3,
        token=ContractSpecs[blockchain].stETH.address,
        holder="0xE53FFF67f9f384d20Ebea36F43b93DC49Ed22753",
        to=avatar_safe.address,
        amount=8_999_999_999_999_000_000,
    )

    avatar_safe_address = avatar_safe.address
    disassembler_address = accounts[4].address
    private_key = accounts[4].key
    role = 4

    steth_contract = ContractSpecs[blockchain].stETH.contract(w3)
    steth_balance = steth_contract.functions.balanceOf(avatar_safe_address).call()
    assert steth_balance == 8999999999998999998

    ctx = GenericTxContext(w3=w3, avatar_safe_address=avatar_safe.address)
    disassembler_instance = Disassembler()

    txn_transactable = lido.LidoUnstakeStETH.get_txns(
        ctx=ctx,
        arguments=lido.StrategyAmountWithSlippageArguments(
            amount=int(Decimal(8999999999998999998) / Decimal(2)), max_slippage=1
        ),
    )

    disassembler_instance.send(
        ctx=ctx,
        roles_mod_address=roles_contract.address,
        role=role,
        txns=txn_transactable,
        private_key=private_key,
    )

    nft_ids = rr_lido.GetWithdrawalRequests(owner=avatar_safe_address).call(w3)
    assert len(nft_ids) == 1

    steth_balance = steth_contract.functions.balanceOf(avatar_safe_address).call()
    assert steth_balance == 4499999999999500000


def test_integration_exit_2(local_node_eth, accounts):
    w3 = local_node_eth.w3
    block = 18710862
    local_node_eth.set_block(block)

    avatar_safe = create_simple_safe(w3=w3, owner=accounts[0])
    roles_contract = deploy_roles(avatar=avatar_safe.address, w3=w3)
    setup_common_roles(avatar_safe, roles_contract)

    apply_presets(
        avatar_safe,
        roles_contract,
        json_data=presets,
        replaces=[
            ("c01318bab7ee1f5ba734172bf7718b5dc6ec90e1", avatar_safe.address[2:])
        ],
    )

    blockchain = Chain.get_blockchain_from_web3(w3)
    steal_token(
        w3=w3,
        token=ContractSpecs[blockchain].wstETH.address,
        holder="0x4dCbB1fE5983ad5b44DC661273a4f11CA812f8B8",
        to=avatar_safe.address,
        amount=8_999_999_999_999_000_000,
    )

    avatar_safe_address = avatar_safe.address
    disassembler_address = accounts[4].address
    private_key = accounts[4].key
    role = 4

    wsteth_contract = ContractSpecs[blockchain].wstETH.contract(w3)
    wsteth_balance = wsteth_contract.functions.balanceOf(avatar_safe_address).call()
    assert wsteth_balance == 8999999999999000000

    ctx = GenericTxContext(w3=w3, avatar_safe_address=avatar_safe.address)
    disassembler_instance = Disassembler()

    txn_transactable = lido.LidoUnwrapAndUnstakeWstETH.get_txns(
        ctx=ctx,
        arguments=lido.StrategyAmountWithSlippageArguments(
            amount=int(Decimal(8999999999998999998) / Decimal(2)), max_slippage=1
        ),
    )

    disassembler_instance.send(
        ctx=ctx,
        roles_mod_address=roles_contract.address,
        role=role,
        txns=txn_transactable,
        private_key=private_key,
    )

    nft_ids = rr_lido.GetWithdrawalRequests(owner=avatar_safe_address).call(w3)
    assert len(nft_ids) == 1

    wsteth_balance = wsteth_contract.functions.balanceOf(avatar_safe_address).call()
    assert wsteth_balance == 4499999999999500001
